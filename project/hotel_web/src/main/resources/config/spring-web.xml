<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	<!-- 主要作用于@Controller，激活该模式 下面是一种简写形式，完全可以手动配置替代这种简写形式； 它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 
		两个bean, 是spring MVC为@Controllers分发请求所必须的 这里表示使用注解开发 -->
	<mvc:annotation-driven />
	<context:component-scan base-package="org.hotel.*">
		<context:include-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
	</context:component-scan>
	
    <!-- 解决静态资源被拦截的问题 -->
    <mvc:default-servlet-handler/>


	<!-- 这里拦截器还有一种配置方法【针对路径进行配置】 推荐使用这个，方便直观 -->
	<!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/user/MyHome" 
		/> <mvc:mapping path="/usermanager/*" /> <bean class="com.springTest.web.interceptor.MyInterceptor"></bean> 
		</mvc:interceptor> </mvc:interceptors> -->

	<!-- 文件上传解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/"></property>
		<property name="suffix" value=".jsp"></property>
		<property value="text/html;charset=UTF-8" name="contentType">
		</property>
	</bean>
	
	<!-- 默认访问跳转到登录页面(即定义无需Controller的url<->view直接映射) -->  
   <!--  <mvc:view-controller path="/login" view-name="forward:/WEB-INF/server/index/login_server.jsp"/>  --> 

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<!-- <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>application/json;charset=UTF-8</value> 
		<value>text/html;charset=UTF-8</value> </list> </property> </bean> -->

	<!-- 对静态资源文件的访问 -->
	<!-- <mvc:default-servlet-handler/> -->
	<!-- 用下面的方法会与sitemesh冲突，导致静态文件servletHeader报错 -->
	<mvc:resources mapping="public/images/**" location="public/images/"
		cache-period="31556926"  order="2147483647" />
	<mvc:resources mapping="public/js/**" location="public/js/"
		cache-period="31556926"  order="2147483647"  />
	<mvc:resources mapping="public/css/**" location="public/css/"
		cache-period="31556926"  order="2147483647" />
	<mvc:resources mapping="public/fonts/**" location="public/fonts/"
		cache-period="31556926"  order="2147483647" />
	<mvc:resources mapping="public/waterfall_imgs/**" location="public/waterfall_imgs/"
		cache-period="31556926"  order="2147483647" />
	<mvc:resources mapping="public/plugins/**" location="public/plugins/"
		cache-period="31556926"  order="2147483647" />
		
	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->  
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/error_fileupload.jsp页面 -->  
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">/error/500</prop>  
                <!-- 处理其它异常(包括Controller抛出的) -->  
                <prop key="java.lang.Throwable">/error/500</prop>  
            </props>  
        </property>  
    </bean>
    
   <!--  <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter"/>
    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
  		<property name="supportedMediaTypes">
              <list>
                  <value>text/html;charset=UTF-8</value>
              </list>
        </property>
    </bean>
    <mvc:annotation-driven>
	    <mvc:message-converters>
            <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
				<property name="messageConverters">
					<list>
						<ref bean="stringHttpMessageConverter"/>
						<ref bean="jsonConverter" />
					</list>
				</property>
			</bean>
	    </mvc:message-converters>
	</mvc:annotation-driven> -->
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<!-- <bean id="fastJsonHttpMessageConverter"
		class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json</value>
			</list>
		</property>
		<property name="features">
			<array>
				<value>WriteNullStringAsEmpty</value>
			</array>
		</property>这个地方加上这个功能吧，能自己配置一些东西，比如时间的格式化，null输出""等等
	</bean> -->
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 请求映射 -->
	<!-- 如果是REST风格的URL,静态资源就不会被拦截。因为我们精准的注入了拦截器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	</bean>  -->
	<!-- 对静态资源文件的访问 支持访问WEB-INF目录 -->
	<!-- <mvc:resources location="/uikit-2.3.1/" mapping="/uikit-2.3.1/**" /> -->
</beans>
