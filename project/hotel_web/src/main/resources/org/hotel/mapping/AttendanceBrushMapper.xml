<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hotel.mapper.AttendanceBrushMapper">
  <resultMap id="BaseResultMap" type="org.hotel.model.AttendanceBrush">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="staff_id" jdbcType="VARCHAR" property="staffId" />
    <result column="staff_no" jdbcType="VARCHAR" property="staffNo" />
    <result column="staff_name" jdbcType="VARCHAR" property="staffName" />
    <result column="org_id" jdbcType="VARCHAR" property="orgId" />
    <result column="org_name" jdbcType="VARCHAR" property="orgName" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="brush1" jdbcType="VARCHAR" property="brush1" />
    <result column="brush2" jdbcType="VARCHAR" property="brush2" />
    <result column="brush3" jdbcType="VARCHAR" property="brush3" />
    <result column="brush4" jdbcType="VARCHAR" property="brush4" />
    <result column="brush5" jdbcType="VARCHAR" property="brush5" />
    <result column="brush6" jdbcType="VARCHAR" property="brush6" />
    <result column="brush7" jdbcType="VARCHAR" property="brush7" />
    <result column="brush8" jdbcType="VARCHAR" property="brush8" />
    <result column="brush9" jdbcType="VARCHAR" property="brush9" />
    <result column="brush10" jdbcType="VARCHAR" property="brush10" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_user" jdbcType="VARCHAR" property="modifyUser" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="del_flag" jdbcType="VARCHAR" property="delFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, staff_id, staff_no, staff_name, org_id, org_name, time, brush1, brush2, brush3, 
    brush4, brush5, brush6, brush7, brush8, brush9, brush10, create_user, create_time, 
    modify_user, modify_time, del_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attendance_brush
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from attendance_brush
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insertSelective" parameterType="org.hotel.model.AttendanceBrush">
    insert into attendance_brush
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="staffNo != null">
        staff_no,
      </if>
      <if test="staffName != null">
        staff_name,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="orgName != null">
        org_name,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="brush1 != null">
        brush1,
      </if>
      <if test="brush2 != null">
        brush2,
      </if>
      <if test="brush3 != null">
        brush3,
      </if>
      <if test="brush4 != null">
        brush4,
      </if>
      <if test="brush5 != null">
        brush5,
      </if>
      <if test="brush6 != null">
        brush6,
      </if>
      <if test="brush7 != null">
        brush7,
      </if>
      <if test="brush8 != null">
        brush8,
      </if>
      <if test="brush9 != null">
        brush9,
      </if>
      <if test="brush10 != null">
        brush10,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyUser != null">
        modify_user,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="staffNo != null">
        #{staffNo,jdbcType=VARCHAR},
      </if>
      <if test="staffName != null">
        #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="brush1 != null">
        #{brush1,jdbcType=VARCHAR},
      </if>
      <if test="brush2 != null">
        #{brush2,jdbcType=VARCHAR},
      </if>
      <if test="brush3 != null">
        #{brush3,jdbcType=VARCHAR},
      </if>
      <if test="brush4 != null">
        #{brush4,jdbcType=VARCHAR},
      </if>
      <if test="brush5 != null">
        #{brush5,jdbcType=VARCHAR},
      </if>
      <if test="brush6 != null">
        #{brush6,jdbcType=VARCHAR},
      </if>
      <if test="brush7 != null">
        #{brush7,jdbcType=VARCHAR},
      </if>
      <if test="brush8 != null">
        #{brush8,jdbcType=VARCHAR},
      </if>
      <if test="brush9 != null">
        #{brush9,jdbcType=VARCHAR},
      </if>
      <if test="brush10 != null">
        #{brush10,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null">
        #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.hotel.model.AttendanceBrush">
    update attendance_brush
    <set>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="staffNo != null">
        staff_no = #{staffNo,jdbcType=VARCHAR},
      </if>
      <if test="staffName != null">
        staff_name = #{staffName,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        org_name = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="brush1 != null">
        brush1 = #{brush1,jdbcType=VARCHAR},
      </if>
      <if test="brush2 != null">
        brush2 = #{brush2,jdbcType=VARCHAR},
      </if>
      <if test="brush3 != null">
        brush3 = #{brush3,jdbcType=VARCHAR},
      </if>
      <if test="brush4 != null">
        brush4 = #{brush4,jdbcType=VARCHAR},
      </if>
      <if test="brush5 != null">
        brush5 = #{brush5,jdbcType=VARCHAR},
      </if>
      <if test="brush6 != null">
        brush6 = #{brush6,jdbcType=VARCHAR},
      </if>
      <if test="brush7 != null">
        brush7 = #{brush7,jdbcType=VARCHAR},
      </if>
      <if test="brush8 != null">
        brush8 = #{brush8,jdbcType=VARCHAR},
      </if>
      <if test="brush9 != null">
        brush9 = #{brush9,jdbcType=VARCHAR},
      </if>
      <if test="brush10 != null">
        brush10 = #{brush10,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null">
        modify_user = #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
   <select id="findAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attendance_brush
  </select>
  <select id="findAttendanceBrushByOrgs" parameterType="java.util.List" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attendance_brush
    where del_flag=0
    and org_id in 
    <foreach close=")" collection="orgs" index="" item="item" open="(" separator=",">  
     	 #{item.id, jdbcType=VARCHAR}  
    </foreach> 
  </select>
  
   <select id="findBrushByStaffAndMac" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attendance_brush brush,staff,org_mac 
    where brush.del_flag=0 and staff.org_id=org_mac.org_id and staff.id=brush.staff_id and org_mac.org_id=brush.org_id
    and  brush10 = #{day,jdbcType=VARCHAR} and staff.staff_no=#{no,jdbcType=VARCHAR} and org_mac.mac = #{mac,jdbcType=VARCHAR}
  </select>
  
   <select id="findAttendanceBrushByLikes" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attendance_brush 
    where del_flag=0 
    <if test="null != orgIds and orgIds.size>0 ">
    	 and org_id in 
	    <foreach close=")" collection="orgIds" index="" item="item" open="(" separator=",">  
	     	 #{item.id, jdbcType=VARCHAR}  
	    </foreach> 
    </if>
    <if test="null != staffId and staffId.length>0">
    	 and staff_id in 
	    <foreach close=")" collection="staffId" index="" item="item" open="(" separator=",">  
	     	 #{item, jdbcType=VARCHAR}
	    </foreach> 
    </if>
    <if test="null !=startTime and null = endTime">
    	and time <![CDATA[ >= ]]> #{startTime}
    </if>
    <if test="null ==startTime and null != endTime">
    	and time <![CDATA[ <= ]]> #{endTime}
    </if>
    <if test="null !=startTime and ''!= endTime">
    	and time between #{startTime} and #{endTime}
    </if>
  </select>
  
  
  
  
  <select id="findConts" resultType="org.hotel.model.AttendanceSearch" parameterType="java.util.List" >
    SELECT
	staff.`staff_name` AS staff_name,
	staff.`staff_no` AS staff_no,
	staff.`org_name` AS org_name,
	COUNT(staff.`keep_rest_day`) AS keep_day,
	COUNT(staff.`year_rest_day`) AS year_day,
	CASE attendance_record.`attendance_type_name` WHEN '平常加班' THEN COUNT(attendance_record.`num`) END AS a_rest,
	CASE attendance_record.`attendance_type_name` WHEN '假日加班' THEN COUNT(attendance_record.`num`) END AS b_rest,
	CASE attendance_record.`attendance_type_name` WHEN '节日加班' THEN COUNT(attendance_record.`num`) END AS c_rest,
	CASE attendance_record.`attendance_type_name` WHEN '倒休' THEN COUNT(attendance_record.`num`) END AS d_rest,
	CASE attendance_record.`attendance_type_name` WHEN '年假' THEN COUNT(attendance_record.`num`) END AS e_rest,
	CASE attendance_record.`attendance_type_name` WHEN '事假' THEN COUNT(attendance_record.`num`) END AS f_rest,
	CASE attendance_record.`attendance_type_name` WHEN '病假' THEN COUNT(attendance_record.`num`) END AS g_rest,
	CASE attendance_record.`attendance_type_name` WHEN '探亲假' THEN COUNT(attendance_record.`num`) END AS h_rest,
	CASE attendance_record.`attendance_type_name` WHEN '工伤假' THEN COUNT(attendance_record.`num`) END AS i_rest,
	CASE attendance_record.`attendance_type_name` WHEN '产假' THEN COUNT(attendance_record.`num`) END AS j_rest,
	CASE attendance_record.`attendance_type_name` WHEN '婚假' THEN COUNT(attendance_record.`num`) END AS k_rest,
	CASE attendance_record.`attendance_type_name` WHEN '丧假' THEN COUNT(attendance_record.`num`) END AS l_rest,
	CASE attendance_record.`attendance_type_name` WHEN '旷工' THEN COUNT(attendance_record.`num`) END AS m_rest,
	CASE attendance_record.`attendance_type_name` WHEN '法定假日' THEN COUNT(attendance_record.`num`) END AS n_rest,
	CASE attendance_record.`attendance_type_name` WHEN '公出' THEN COUNT(attendance_record.`num`) END AS o_rest,
	CASE attendance_record.`attendance_type_name` WHEN '存休' THEN COUNT(attendance_record.`num`) END AS p_rest,
	CASE attendance_exceptional.exception_type WHEN 'LATER' THEN COUNT(attendance_record.`num`) END AS q_rest,
	CASE attendance_exceptional.exception_type WHEN 'EARLYQUIT' THEN COUNT(attendance_record.`num`) END AS t_rest,
	COUNT(wo.work_time) AS s_rest
	FROM 
	staff LEFT JOIN attendance_record ON staff.`id`=attendance_record.`staff_id` 
	LEFT JOIN attendance_exceptional ON attendance_record.`staff_id` =attendance_record.`staff_id`
	LEFT JOIN (SELECT schedule_staff.`staff_id`,work_order.`work_time` FROM schedule_staff LEFT JOIN work_order ON schedule_staff.`order_id`=work_order.`id`) wo 
	ON  attendance_exceptional.staff_id=wo.staff_id
	and staff.org_id in 
    <foreach close=")" collection="orgs" index="" item="item" open="(" separator=",">  
     	 #{item.id, jdbcType=VARCHAR}  
    </foreach> 
    
  </select>
  
</mapper>